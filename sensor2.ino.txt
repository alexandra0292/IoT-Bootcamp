
typedef struct sensor_t {
  float (*get) (void);
  char paramName[20];
  char unitName[10];
} sensorType;

enum { SENSOR_LIGHT, SENSOR_PIR, SENSOR_NR_OF };



//==============================
//Sensor de miscare
#define PIR_PIN 3
//==============================


void SetupPIR() {
  pinMode(PIR_PIN, INPUT);
}

float ReadPIR() {
  int sensorState = digitalRead(PIR_PIN);
  return sensorState;
}



//====================================
//Sensor lumina
//===================================
#define LDR_PIN A0
#define LIGHT_MIN 10
#define LIGHT_MAX 100
#define ADC_MIN 0
#define ADC_MAX 1023
#define VOLT_MIN 0
#define VOLT_MAX 5

void LightSensorSetup () {
	pinMode(LDR_PIN, INPUT);
	
}

  
float GetLight () {
  int rawData = analogRead(LDR_PIN);
  float voltage = map(rawData, ADC_MIN, ADC_MAX, VOLT_MIN, VOLT_MAX);
  float light = map(voltage, VOLT_MIN, VOLT_MAX, LIGHT_MIN, LIGHT_MAX);
  
  return light;
}


//======================================
//baterie+releu
//===========================
#define RELAY_PIN 13

void Setup() {
 Serial.begin(9600);
 RelayInit();
  
}
void RelayInit() {
 pinMode(RELAY_PIN, OUTPUT);
}
 
void RelayOn()  {
  digitalWrite(RELAY_PIN, HIGH);
}

void RelayOff() {
  digitalWrite(RELAY_PIN, LOW);
}


  

//========================================//

sensorType sensorList[SENSOR_NR_OF] = {
  { 
     GetLight,
    "Light intensity",
    "points"    
  },
  {
    ReadPIR,
    "Motion",
    "yes/no",
  },
};

float SensorGetValue(int id) {
    if(id < SENSOR_NR_OF) {
      return sensorList[id].get();
    }
}

char * SensorGetUnit(int id) {
    if(id < SENSOR_NR_OF) {
      return sensorList[id].unitName;
    }
}

char * SensorGetParamName(int id) {
    if(id < SENSOR_NR_OF) {
      return sensorList[id].paramName;
    }
}


void setup() {
  Serial.begin(9600);
  LightSensorSetup();
  SetupPIR();
  RelayInit();
}


void loop() {
  int i =SENSOR_LIGHT;
  char * paramName = SensorGetParamName(i);
  Serial.print(paramName);
  Serial.print(": ");
    
  float value = SensorGetValue(i);  
  Serial.print(value); 
    
  if (value>30) {
    int s =SENSOR_PIR;
    float value_PIR = SensorGetValue(s); 
    Serial.print(" PIR value:");
    Serial.println(value_PIR);
    if (value_PIR==1.00) {
      RelayOn();
      delay(5000);
      RelayOff();
    }   
  }
  
Serial.println();
  delay(500);  
}